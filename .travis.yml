language: cpp

matrix:
  include:
    - name: "gcc 8 Debug Coverage (ONLY_COVERAGE)"
      os: linux
      sudo: false
      env: COVERAGE=1 CXX_EXE=/usr/bin/g++-8 CC_EXE=/usr/bin/gcc-8 GCOV=/usr/bin/gcov-8 CMAKE_OPTS="-DONLY_COVERAGE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Debug"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libx11-dev
            - libxrandr-dev
            - libudev-dev
            - g++-8


install:
  - pip install --user conan cmake
#  - curl -s https://report.ci/annotate.py > annotate.py
  

script:
  - $CXX_EXE --version
  - which cmake
  - cmake --version
  - conan --version
  - export CXX=$CXX_EXE
  - export CC=$CC_EXE
  - echo $CXX
  - echo $CMAKE_OPTS
  - $CXX --version
  - mkdir build
  - cd build
  - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan 
  - conan install ..
  - cmake  $CMAKE_OPTS ..
#  - VERBOSE=1 cmake --build . -- -j2 | python ../annotate.py --tool gcc --name "Gcc Build" --tee
  - VERBOSE=1 cmake --build . -- -j2
  - ctest -j2
#  - if [ "${COVERAGE}" = "1" ]; then bash <(curl -s https://codecov.io/bash) -x $GCOV 2>/dev/null ; fi
  - bash <(curl -s https://codecov.io/bash) -x $GCOV

#after_script:
#  - curl -s https://report.ci/upload.py | python
    